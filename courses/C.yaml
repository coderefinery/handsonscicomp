- id: C10 Basic shell
  desc: |
    Let's face it: the command line is the basis of most data
    science and programming.
  video: |
    `Shell crash course <https://youtu.be/56p6xX0aToI>`__
  reading: |
    > `Shell crash course <https://scicomp.aalto.fi/scicomp/shell/>`__
    > `Software Carpentry shell-novice <http://swcarpentry.github.io/shell-novice/>`__.
    >The first part of our `shell course
    <https://scicomp.aalto.fi/training/linux-shell-tutorial.html>`__ is
    good too.
  questions: |
    >How does the shell work?
    >When to use a CLI instead of a GUI?


- id: C23 Text editors and IDEs
  desc: |
    Your best friend is a good text editor - sometimes you just
    need to edit things quickly on some remote system.
  video: |
    Get to know VS Code `tutorial series  <https://www.youtube.com/playlist?list=PLkEZWD8wbltm8T3mS7SMCpT6WlnyIP50T>`__
  reading: |
    > `Software Carpentry
    shell-novice, "Create a text file" part of section 3
    <http://swcarpentry.github.io/shell-novice/>`__
    > `IDE tutorial <https://coderefinery.github.io/IDEs/>`__
    by CodeRefinery.
  questions: |
    >Which tools to use for code development and editing?


- id: C20 Shell scripting
  desc: |
    If you can do it on the Linux shell, you can automate it.
  video: |
    > `Shell scripting <https://www.youtube.com/playlist?list=PLUQy4zfrctjH-FsjpIZDZ0NBznvF4FdNP>`__ tutorials.
  reading: |
    >Continue with the `Science-IT Linux shell tutorial
    <https://scicomp.aalto.fi/training/linux-shell-tutorial.html#part-2-linux-shell-scripting>`__ part 2.
  questions: |
    >How to make use of shell scripting tools in repetitive task automation?


- id: C21 Version control for you
  desc: |
    Version control lets you track changes, go back in time, and
    collaborate on code and papers: an absolute requirement for
    scientific computing.
  video: |
    >Why bother with `version control <https://www.youtube.com/watch?v=zbKdDsNNOhg>`__
    >An `introduction <https://www.youtube.com/watch?v=PWqS4NBhEY8>`__ for beginners to managing code on remote GitHub repositories
  reading: |
    > `CodeRefinery Introduction to version
    control <https://coderefinery.github.io/git-intro/>`__
  questions: |
    >What is Git?
    >How to initialize a Git repository?


- id: C22 SSH and remote access
  desc: |
    A short but important course: how to do work remotely.
    Different expert tips for making ssh better, too.
  reading: |
    > `SSH <https://www.mn.uio.no/geo/english/services/it/help/using-linux/ssh-tips-and-tricks.html>`__ for working on a remote machine.
  video: |
    > `Introduction to secure shell <https://www.youtube.com/watch?v=UHWR3Nj3bhE&list=PLA86D04D6E0BFD2E0&index=9>`__ by Software Carpentry
  questions: |
    >What does SSH mean and when to use it?


- id: C23 Make
  desc: |
    Automate the repetitive stuff with Make.
  video: |
    > `Episodes <https://www.youtube.com/playlist?list=PLF47AC7312BE0799A>`__ on Make by Software Carpentry
  reading: |
    >Short `introduction <https://opensource.com/article/18/8/what-how-makefile>`__ on what is a Makefile and basic operations.
    >For more information on Makefiles see `GNU Make Manual <https://www.gnu.org/software/make/manual/make.html>`__
  questions: |
    >How can a Makefile be useful in your large project?
